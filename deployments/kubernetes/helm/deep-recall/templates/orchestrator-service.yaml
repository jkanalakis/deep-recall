{{- if .Values.orchestratorService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deep-recall.fullname" . }}-orchestrator
  labels:
    {{- include "deep-recall.labels" . | nindent 4 }}
    app.kubernetes.io/component: orchestrator
spec:
  replicas: {{ .Values.orchestratorService.replicaCount }}
  selector:
    matchLabels:
      {{- include "deep-recall.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: orchestrator
  template:
    metadata:
      labels:
        {{- include "deep-recall.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: orchestrator
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deep-recall.serviceAccountName" . }}
      containers:
        - name: orchestrator
          image: "{{ .Values.global.registry }}{{ .Values.orchestratorService.image.repository }}:{{ .Values.orchestratorService.image.tag }}"
          imagePullPolicy: {{ .Values.orchestratorService.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
          resources:
            {{- toYaml .Values.orchestratorService.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.orchestratorService.envVars }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "deep-recall.fullname" . }}-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "deep-recall.fullname" . }}-orchestrator
  labels:
    {{- include "deep-recall.labels" . | nindent 4 }}
    app.kubernetes.io/component: orchestrator
spec:
  type: {{ .Values.orchestratorService.service.type }}
  ports:
    - port: {{ .Values.orchestratorService.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "deep-recall.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: orchestrator
{{- if .Values.orchestratorService.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "deep-recall.fullname" . }}-orchestrator
  labels:
    {{- include "deep-recall.labels" . | nindent 4 }}
    app.kubernetes.io/component: orchestrator
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "deep-recall.fullname" . }}-orchestrator
  minReplicas: {{ .Values.orchestratorService.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.orchestratorService.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.orchestratorService.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.orchestratorService.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.orchestratorService.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.orchestratorService.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
{{- end }} 