name: CI - Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: deep_recall
          POSTGRES_PASSWORD: deep_recall_password
          POSTGRES_DB: deep_recall
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
          - 6334:6334
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
      
      - name: Install SWIG for faiss-cpu
        run: sudo apt-get update && sudo apt-get install -y swig
      
      - name: Run database setup
        run: |
          PGPASSWORD=deep_recall_password psql -h localhost -U deep_recall -d deep_recall -f init_db.sql
          PGPASSWORD=deep_recall_password psql -h localhost -U deep_recall -d deep_recall -f schema.sql
      
      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://deep_recall:deep_recall_password@localhost/deep_recall
          VECTOR_DB_URL: http://localhost:6333
          LOG_LEVEL: DEBUG
        run: |
          pytest tests/test_memory.py tests/test_embeddings.py tests/test_vector_db.py --cov=./memory --cov-report=xml --cov-report=term
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
          flags: unit-tests

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: deep_recall
          POSTGRES_PASSWORD: deep_recall_password
          POSTGRES_DB: deep_recall
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
          - 6334:6334
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
      
      - name: Install SWIG for faiss-cpu
        run: sudo apt-get update && sudo apt-get install -y swig
      
      - name: Run database setup
        run: |
          PGPASSWORD=deep_recall_password psql -h localhost -U deep_recall -d deep_recall -f init_db.sql
          PGPASSWORD=deep_recall_password psql -h localhost -U deep_recall -d deep_recall -f schema.sql
      
      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://deep_recall:deep_recall_password@localhost/deep_recall
          VECTOR_DB_URL: http://localhost:6333
          LOG_LEVEL: DEBUG
        run: |
          pytest tests/test_memory_pipeline.py tests/test_semantic_search.py --cov=./ --cov-report=xml --cov-report=term
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
          flags: integration-tests

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
      
      - name: Run linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .
          isort --check-only --profile black .
          
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: deep_recall
          POSTGRES_PASSWORD: deep_recall_password
          POSTGRES_DB: deep_recall
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
          - 6334:6334
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio httpx
      
      - name: Run database setup
        run: |
          PGPASSWORD=deep_recall_password psql -h localhost -U deep_recall -d deep_recall -f init_db.sql
          PGPASSWORD=deep_recall_password psql -h localhost -U deep_recall -d deep_recall -f schema.sql
      
      - name: Start API server
        env:
          DATABASE_URL: postgresql://deep_recall:deep_recall_password@localhost/deep_recall
          VECTOR_DB_URL: http://localhost:6333
          LOG_LEVEL: DEBUG
        run: |
          python -m api.main &
          sleep 5  # Give the server some time to start
      
      - name: Run API tests
        run: |
          pytest tests/test_api_*.py --cov=./api --cov-report=xml --cov-report=term
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
          flags: api-tests 